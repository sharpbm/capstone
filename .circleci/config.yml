version: 2.1

commands:
  install_awscli:
    description: Install AWS CLI v2
    steps:
      - run:
          name: Install AWS CLI v2
          command: |
            curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
            unzip awscliv2.zip
            sudo ./aws/install

jobs:

  run-lint:
    docker:
      - image: python:3.7.3-stretch
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "requirements.txt" }}
            - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            make install
            wget -O /bin/hadolint https://github.com/hadolint/hadolint/releases/download/v1.16.3/hadolint-Linux-x86_64 &&\
            chmod +x /bin/hadolint            

      - run:
          name: run lint
          command: |
            . venv/bin/activate
            make lint
            
      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "requirements.txt" }}
          
  build-upload-docker:
    docker:
      - image: circleci/golang:1.16

    steps:
      - checkout
      
      - setup_remote_docker:
          version: 20.10.14
          
      - run:
          name: Build docker container
          command: |
            docker build --tag=$DOCKER_IMAGE_NAME .
            docker image ls
            
      - run:
          name: Upload Docker to Dockerhub
          command: |
            docker tag $DOCKER_IMAGE_NAME $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_WORKFLOW_ID
            docker login -u="$DOCKERHUB_USERNAME" -p="$DOCKERHUB_PASSWORD"
            docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE_NAME:$CIRCLE_WORKFLOW_ID
            
  create-eks-cluster:
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        
        - run:
            name: Install tar utility
            command: |
              yum install -y tar gzip        
        
        - run:
            name: Install eks dependencies
            command: |
              curl -o aws-iam-authenticator https://amazon-eks.s3.us-west-2.amazonaws.com/1.19.6/2021-01-05/bin/linux/amd64/aws-iam-authenticator
              chmod +x ./aws-iam-authenticator
              mkdir -p $HOME/bin && cp ./aws-iam-authenticator $HOME/bin/aws-iam-authenticator && export PATH=$PATH:$HOME/bin
              echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
              aws-iam-authenticator help
              curl --silent --location "https://github.com/weaveworks/eksctl/releases/latest/download/eksctl_$(uname -s)_amd64.tar.gz" | tar xz -C /tmp
              mv /tmp/eksctl /usr/local/bin
              eksctl version
              curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
              install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
              kubectl version --client
        - run:
            name: Create eks cluster 
            command: |
              CLUSTER_EXIST=$(aws cloudformation list-exports --query "Exports[?Name=='eksctl-udacity-capstone-cluster::ARN'].Value" --output text)
              if [[ "${CLUSTER_EXIST}" = "None" ]] 
              then 
                eksctl create cluster --name udacity-capstone \
                --nodegroup-name workers \
                --node-type t2.medium \
                --nodes 2 \
                --nodes-min 1 \
                --nodes-max 3 \
                --node-ami auto \
                --region us-east-1 
              fi
              sleep 2m

workflows:
  default:
    jobs:
      - run-lint
      - build-upload-docker:
          requires:
            - run-lint
      - create-eks-cluster:
          requires:
            - build-upload-docker
        